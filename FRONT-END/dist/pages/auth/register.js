import AuthenticationApi from"../../services/AuthenticationApi.js";import Swal from"sweetalert2";import{navigateTo}from"../../utils/helpers.js";class Register{constructor(){this.registrationForm=document.getElementById("registration-form"),this.render()}addSubmitEventListener(){this.registrationForm.addEventListener("submit",this.onSubmitRegisterForm.bind(this))}async onSubmitRegisterForm(e){e.preventDefault();const r=e.target,t={name:r.querySelector("[name='name']").value,email:r.querySelector("[name = 'email']").value,password:r.querySelector("[name = 'password']").value,confirmPassword:r.querySelector("[name = 'confirmPassword']").value};if(t.name&&t.email&&t.password&&t.confirmPassword)if(t.password===t.confirmPassword){try{await AuthenticationApi.register(t),console.log("registration successfull"),this.clearFieldsAfterSubmit([r.querySelector("[name='name']"),r.querySelector("[name = 'email']"),r.querySelector("[name = 'password']"),r.querySelector("[name = 'confirmPassword']")]),Swal.fire({title:"Registration Successful!",text:"You are now ready to login!",icon:"success"}),navigateTo("/login")}catch(e){console.log(e),Swal.fire({icon:"error",title:"Oops...",text:e?.response?.data?.message??" Something went wrong"}),console.log(e?.response?.data)}console.log(t)}else alert("passwords must match");else alert("all fields are required")}clearFieldsAfterSubmit(e){e.forEach((e=>e.value=""))}render(){this.addSubmitEventListener()}}export default Register;